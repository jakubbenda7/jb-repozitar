import requests
from bs4 import BeautifulSoup
import csv
import sys
import re

hlavni_url = "https://volby.cz/pls/ps2017nss/ps32?xjazyk=CZ&xkraj=12&xnumnuts=7103"
def tabulky_na_url(url):
    odpoved = requests.get(url)
    polivka = BeautifulSoup(odpoved.content, 'html.parser')
    tabulky = polivka.find_all("table")
    return tabulky

#získání dat z tabulek v hlavním url
def ziskani_urls_z_dat_tabulek(tabulky):
    odkazy=[]
    for tabulka in tabulky:
        for odkaz in tabulka.find_all("a",href=True):
            odkazy.append(odkaz["href"])
    return odkazy


#získání jedinečných odkazů z tabulek v hlavním url. (koncových tabulek, které mají 
#sečtené hlasy všech okrsků pomocí výberu v inspekci "vyber" ) + vytvoření unikátního seznamu bez duplicit   
data_z_tabulek_hlavni_url = tabulky_na_url(hlavni_url)
urls = ziskani_urls_z_dat_tabulek(data_z_tabulek_hlavni_url)
odkazy_s_vyber= filter(lambda udaj: "vyber" in udaj, urls)
unikatni_odkazy_s_vyber= []
[unikatni_odkazy_s_vyber.append(x) for x in odkazy_s_vyber if x not in unikatni_odkazy_s_vyber]

#vytvoření listu celých odkazů na původním url
odkazy_list=["https://volby.cz/pls/ps2017nss/" + odkaz for odkaz in unikatni_odkazy_s_vyber]

    
#získání dat z odkazů v tabulkách hlavního url
data_z_odkazu=[]
for cely_odkaz in odkazy_list:
    data_z_odkazu.append(tabulky_na_url(cely_odkaz))

#scrapování politických stran z dat tabulek v odkazech
def vypis_jmena(tabulky:BeautifulSoup, jmeno_tagu:str="td"):
    strany=[]
    for tabulka in tabulky:
        for odkazz in tabulka.find_all(jmeno_tagu,{"class":"overflow_name"}):
            strany.append(odkazz)
    return strany

#hlava csv souboru + přidání vyscrapovaných politických stran do hlavy
seznam_stran = vypis_jmena(data_z_odkazu[0])
hlava = ["Code", "Location", "Registered", "Envelopes", "Valid"] #zde je uložená hlava
#připravená do csv
for pol_strana in (seznam_stran):
  hlava.append(f"{pol_strana.text}")
    
#takto si vypíšu jména okrsků
jmena_okrsku = vypis_jmena(data_z_tabulek_hlavni_url)
jmena_okrsku_hotova=[]    #zde jsou uložené jména okrsků připravené do csv
for jmeno_okrsku in (jmena_okrsku):
    jmena_okrsku_hotova.append(f"{jmeno_okrsku.text}")

#takto vypíšu kódy
kody_z_url=[] #zde jsou uložené kódy okrsků
regex = r"xobec=(\d+)"
for url in unikatni_odkazy_s_vyber:
    matches= re.findall(regex,url)
    kody_z_url.extend(matches)

#registered
def vypis_pocet_registrovaných(tabulky_seznamu:list, jmeno_tagu:str="td"):
    registered=[]
    for tabulky in tabulky_seznamu:
        for tabulka in tabulky:
            for pocet_regis in tabulka.find_all(jmeno_tagu,{"class":"cislo", "headers":"sa2"}):
                registered.append(pocet_regis)
    return registered
registered=vypis_pocet_registrovaných(data_z_odkazu)
# Funkce pro extrakci čísel z řetězců a jejich převedení na celá čísla
def extrahovat_cisla(registrovana_data):
    cisla = []
    for data in registrovana_data:
        cislo_text = re.sub(r'\D', '', data.text)  # Odstranění všech nečíselných znaků
        if cislo_text:  # Ujistěte se, že existuje text s čísly
            cislo = int(cislo_text)
            cisla.append(cislo)
    return cisla

# Extrahovat čísla z registrovaných dat
registrovana_cisla = extrahovat_cisla(registered) #zde jsou uložena čísla počtů registrovaných voličů

#envelopes
def vypis_pocet_obalek(tabulky_seznamu:list, jmeno_tagu:str="td"):
    envelopes=[]
    for tabulky in tabulky_seznamu:
        for tabulka in tabulky:
            for pocet_envel in tabulka.find_all(jmeno_tagu,{"class":"cislo", "headers":"sa5"}):
                envelopes.append(pocet_envel)
    return envelopes
envelopes=vypis_pocet_obalek(data_z_odkazu)
envelopes_cisla = extrahovat_cisla(envelopes) #zde jsou uložena čísla počtů obálek

#valid
def vypis_pocet_platnych(tabulky_seznamu:list, jmeno_tagu:str="td"):
    valid=[]
    for tabulky in tabulky_seznamu:
        for tabulka in tabulky:
            for pocet_valid in tabulka.find_all(jmeno_tagu,{"class":"cislo", "headers":"sa6"}):
                valid.append(pocet_valid)
    return valid
valid=vypis_pocet_platnych(data_z_odkazu)
valid_cisla = extrahovat_cisla(valid) #zde jsou uložena čísla počtů platných hlasů


#celkem hlasů pro stranu
def vypis_pocet_hlasu_pro_strany1(tabulky_seznamu:list, jmeno_tagu:str="td"):
    hlasy=[]
    for tabulky in tabulky_seznamu:
        for tabulka in tabulky:
            for pocet_hlasy in tabulka.find_all(jmeno_tagu,{"class":"cislo", "headers":"t1sa2 t1sb3"}):
                hlasy.append(pocet_hlasy)
    return hlasy
hlasy1=vypis_pocet_hlasu_pro_strany1(data_z_odkazu)
hlasy1hotovo = extrahovat_cisla(hlasy1) #zde jsou uložena čísla počtů hlasů pro strany první část

def vypis_pocet_hlasu_pro_strany2(tabulky_seznamu:list, jmeno_tagu:str="td"):
    hlasy=[]
    for tabulky in tabulky_seznamu:
        for tabulka in tabulky:
            for pocet_hlasy in tabulka.find_all(jmeno_tagu,{"class":"cislo", "headers":"t2sa2 t2sb3"}):
                hlasy.append(pocet_hlasy)
    return hlasy
hlasy2=vypis_pocet_hlasu_pro_strany2(data_z_odkazu)
hlasy2hotovo = extrahovat_cisla(hlasy2) #zde jsou uložena počtů hlasů pro strany druhá část

csv_file = "example.csv"
pocet_items = len(hlava)
index1 = int(len(hlasy1hotovo)/ len(kody_z_url))
index2 = int(len(hlasy2hotovo)/ len(kody_z_url))
pocet_polozek = 50
items = [f"item{i}" for i in range(1,pocet_polozek+1)]


with open (csv_file, mode="w", newline="") as file:
    writer = csv.writer(file)
    writer.writerow(hlava)
    for item in (items[:pocet_items],1) in zip (kody_z_url,jmena_okrsku_hotova,registrovana_cisla, envelopes_cisla,valid_cisla,[hlasy1hotovo[i::index1] for i in range(index1-1)],[hlasy2hotovo[i::index2] for i in range(index2-1)]):
        writer.writerow[items[:pocet_items,1]]
         
       
    #for item1, item2, item3, item4, item5,item6,item7,item8,item9,item10,item11,item12,item13,item14,item15,item16,item17,item18,item19,item20,item21,item22,item23,item24,item25,item26,item27,item28,item29,item30 in zip(kody_z_url,jmena_okrsku_hotova,registrovana_cisla, envelopes_cisla,valid_cisla,hlasy1hotovo[0::index1],hlasy1hotovo[1::index1],hlasy1hotovo[2::index1],hlasy1hotovo[3::index1],hlasy1hotovo[4::index1],hlasy1hotovo[5::index1],hlasy1hotovo[6::index1],hlasy1hotovo[7::index1],hlasy1hotovo[8::index1],hlasy1hotovo[9::index1],hlasy1hotovo[10::index1],hlasy1hotovo[11::index1],hlasy1hotovo[12::index1],hlasy2hotovo[0::index2],hlasy2hotovo[1::index2],hlasy2hotovo[2::index2],hlasy2hotovo[3::index2],hlasy2hotovo[4::index2],hlasy2hotovo[5::index2],hlasy2hotovo[6::index2],hlasy2hotovo[7::index2],hlasy2hotovo[8::index2],hlasy2hotovo[9::index2],hlasy2hotovo[10::index2],hlasy2hotovo[11::index2],):
    #    writer.writerow([item1,item2,item3,item4,item5,item6,item7,item8,item9,item10,item11,item12,item13,item14,item15,item16,item17,item18,item19,item20,item21,item22,item23,item24,item25,item26,item27,item28,item29,item30])
    #file.close()

    
        

    

    
          
    
    
    
